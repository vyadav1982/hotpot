/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as ServerImport } from './routes/server'
import { Route as LoginImport } from './routes/login'
import { Route as GuestImport } from './routes/guest'
import { Route as DashboardImport } from './routes/dashboard'
import { Route as CouponImport } from './routes/coupon'

// Create/Update Routes

const ServerRoute = ServerImport.update({
  id: '/server',
  path: '/server',
  getParentRoute: () => rootRoute,
} as any)

const LoginRoute = LoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const GuestRoute = GuestImport.update({
  id: '/guest',
  path: '/guest',
  getParentRoute: () => rootRoute,
} as any)

const DashboardRoute = DashboardImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRoute,
} as any)

const CouponRoute = CouponImport.update({
  id: '/coupon',
  path: '/coupon',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/coupon': {
      id: '/coupon'
      path: '/coupon'
      fullPath: '/coupon'
      preLoaderRoute: typeof CouponImport
      parentRoute: typeof rootRoute
    }
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardImport
      parentRoute: typeof rootRoute
    }
    '/guest': {
      id: '/guest'
      path: '/guest'
      fullPath: '/guest'
      preLoaderRoute: typeof GuestImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/server': {
      id: '/server'
      path: '/server'
      fullPath: '/server'
      preLoaderRoute: typeof ServerImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/coupon': typeof CouponRoute
  '/dashboard': typeof DashboardRoute
  '/guest': typeof GuestRoute
  '/login': typeof LoginRoute
  '/server': typeof ServerRoute
}

export interface FileRoutesByTo {
  '/coupon': typeof CouponRoute
  '/dashboard': typeof DashboardRoute
  '/guest': typeof GuestRoute
  '/login': typeof LoginRoute
  '/server': typeof ServerRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/coupon': typeof CouponRoute
  '/dashboard': typeof DashboardRoute
  '/guest': typeof GuestRoute
  '/login': typeof LoginRoute
  '/server': typeof ServerRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/coupon' | '/dashboard' | '/guest' | '/login' | '/server'
  fileRoutesByTo: FileRoutesByTo
  to: '/coupon' | '/dashboard' | '/guest' | '/login' | '/server'
  id: '__root__' | '/coupon' | '/dashboard' | '/guest' | '/login' | '/server'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  CouponRoute: typeof CouponRoute
  DashboardRoute: typeof DashboardRoute
  GuestRoute: typeof GuestRoute
  LoginRoute: typeof LoginRoute
  ServerRoute: typeof ServerRoute
}

const rootRouteChildren: RootRouteChildren = {
  CouponRoute: CouponRoute,
  DashboardRoute: DashboardRoute,
  GuestRoute: GuestRoute,
  LoginRoute: LoginRoute,
  ServerRoute: ServerRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/coupon",
        "/dashboard",
        "/guest",
        "/login",
        "/server"
      ]
    },
    "/coupon": {
      "filePath": "coupon.tsx"
    },
    "/dashboard": {
      "filePath": "dashboard.tsx"
    },
    "/guest": {
      "filePath": "guest.tsx"
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/server": {
      "filePath": "server.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
